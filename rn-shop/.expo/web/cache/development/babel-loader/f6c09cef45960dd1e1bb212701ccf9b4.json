{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\React-Native\\\\rn-shop\\\\screens\\\\shop\\\\ProductDetailScreen.js\";\n\nimport React from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useSelector } from 'react-redux';\nimport Colors from \"../../constants/Colors\";\n\nvar ProductDetailScreen = function ProductDetailScreen(props) {\n  var productId = props.navigation.getParam('productId');\n  var selectedProduct = useSelector(function (state) {\n    return state.products.availableProducts.find(function (prod) {\n      return prod.id === productId;\n    });\n  });\n  return React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    style: styles.image,\n    source: {\n      uri: selectedProduct.imageUrl\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.actions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    color: Colors.primary,\n    title: \"Add to Cart\",\n    onPress: function onPress() {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  })), React.createElement(Text, {\n    style: styles.price,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"$\", selectedProduct.price.toFixed(2)), React.createElement(Text, {\n    style: styles.description,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, selectedProduct.description));\n};\n\nProductDetailScreen.navigationOptions = function (navData) {\n  return {\n    headerTitle: navData.navigation.getParam('productTitle')\n  };\n};\n\nvar styles = StyleSheet.create({\n  image: {\n    width: '100%',\n    height: 300\n  },\n  actions: {\n    marginVertical: 10,\n    alignItems: 'center'\n  },\n  price: {\n    fontSize: 20,\n    color: '#888',\n    textAlign: 'center',\n    marginVertical: 20,\n    fontFamily: 'open-sans-bold'\n  },\n  description: {\n    fontFamily: 'open-sans',\n    fontSize: 14,\n    textAlign: 'center',\n    marginHorizontal: 20\n  }\n});\nexport default ProductDetailScreen;","map":{"version":3,"sources":["D:/React-Native/rn-shop/screens/shop/ProductDetailScreen.js"],"names":["React","useSelector","Colors","ProductDetailScreen","props","productId","navigation","getParam","selectedProduct","state","products","availableProducts","find","prod","id","styles","image","uri","imageUrl","actions","primary","price","toFixed","description","navigationOptions","navData","headerTitle","StyleSheet","create","width","height","marginVertical","alignItems","fontSize","color","textAlign","fontFamily","marginHorizontal"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AASA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,MAAP;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAC,KAAK,EAAI;AACnC,MAAMC,SAAS,GAAGD,KAAK,CAACE,UAAN,CAAiBC,QAAjB,CAA0B,WAA1B,CAAlB;AACA,MAAMC,eAAe,GAAGP,WAAW,CAAC,UAAAQ,KAAK;AAAA,WACvCA,KAAK,CAACC,QAAN,CAAeC,iBAAf,CAAiCC,IAAjC,CAAsC,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACC,EAAL,KAAYT,SAAhB;AAAA,KAA1C,CADuC;AAAA,GAAN,CAAnC;AAIA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEU,MAAM,CAACC,KAArB;AAA4B,IAAA,MAAM,EAAE;AAAEC,MAAAA,GAAG,EAAET,eAAe,CAACU;AAAvB,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEjB,MAAM,CAACkB,OAAtB;AAA+B,IAAA,KAAK,EAAC,aAArC;AAAmD,IAAA,OAAO,EAAE,mBAAM,CAAE,CAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAKE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACM,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA6Bb,eAAe,CAACa,KAAhB,CAAsBC,OAAtB,CAA8B,CAA9B,CAA7B,CALF,EAME,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEP,MAAM,CAACQ,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCf,eAAe,CAACe,WAAlD,CANF,CADF;AAUD,CAhBD;;AAkBApB,mBAAmB,CAACqB,iBAApB,GAAwC,UAAAC,OAAO,EAAI;AACjD,SAAO;AACLC,IAAAA,WAAW,EAAED,OAAO,CAACnB,UAAR,CAAmBC,QAAnB,CAA4B,cAA5B;AADR,GAAP;AAGD,CAJD;;AAMA,IAAMQ,MAAM,GAAGY,UAAU,CAACC,MAAX,CAAkB;AAC/BZ,EAAAA,KAAK,EAAE;AACLa,IAAAA,KAAK,EAAE,MADF;AAELC,IAAAA,MAAM,EAAE;AAFH,GADwB;AAK/BX,EAAAA,OAAO,EAAE;AACPY,IAAAA,cAAc,EAAE,EADT;AAEPC,IAAAA,UAAU,EAAE;AAFL,GALsB;AAS/BX,EAAAA,KAAK,EAAE;AACLY,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,KAAK,EAAE,MAFF;AAGLC,IAAAA,SAAS,EAAE,QAHN;AAILJ,IAAAA,cAAc,EAAE,EAJX;AAKLK,IAAAA,UAAU,EAAE;AALP,GATwB;AAgB/Bb,EAAAA,WAAW,EAAE;AACXa,IAAAA,UAAU,EAAE,WADD;AAEXH,IAAAA,QAAQ,EAAE,EAFC;AAGXE,IAAAA,SAAS,EAAE,QAHA;AAIXE,IAAAA,gBAAgB,EAAE;AAJP;AAhBkB,CAAlB,CAAf;AAwBA,eAAelC,mBAAf","sourcesContent":["import React from 'react';\nimport {\n  ScrollView,\n  View,\n  Text,\n  Image,\n  Button,\n  StyleSheet\n} from 'react-native';\nimport { useSelector } from 'react-redux';\n\nimport Colors from '../../constants/Colors';\n\nconst ProductDetailScreen = props => {\n  const productId = props.navigation.getParam('productId');\n  const selectedProduct = useSelector(state =>\n    state.products.availableProducts.find(prod => prod.id === productId)\n  );\n\n  return (\n    <ScrollView>\n      <Image style={styles.image} source={{ uri: selectedProduct.imageUrl }} />\n      <View style={styles.actions}>\n        <Button color={Colors.primary} title=\"Add to Cart\" onPress={() => {}} />\n      </View>\n      <Text style={styles.price}>${selectedProduct.price.toFixed(2)}</Text>\n      <Text style={styles.description}>{selectedProduct.description}</Text>\n    </ScrollView>\n  );\n};\n\nProductDetailScreen.navigationOptions = navData => {\n  return {\n    headerTitle: navData.navigation.getParam('productTitle')\n  };\n};\n\nconst styles = StyleSheet.create({\n  image: {\n    width: '100%',\n    height: 300\n  },\n  actions: {\n    marginVertical: 10,\n    alignItems: 'center'\n  },\n  price: {\n    fontSize: 20,\n    color: '#888',\n    textAlign: 'center',\n    marginVertical: 20,\n    fontFamily: 'open-sans-bold'\n  },\n  description: {\n    fontFamily: 'open-sans',\n    fontSize: 14,\n    textAlign: 'center',\n    marginHorizontal: 20\n  }\n});\n\nexport default ProductDetailScreen;\n"]},"metadata":{},"sourceType":"module"}