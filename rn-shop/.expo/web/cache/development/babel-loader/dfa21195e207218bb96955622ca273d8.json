{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\React-Native\\\\rn-shop\\\\App.js\";\nimport React, { useState } from \"react\";\nimport { createStore, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport AppLoading from \"expo-app-loading\";\nimport * as Font from \"expo-font\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport productsReducer from \"./store/reducers/products\";\nimport cartReducer from \"./store/reducers/cart\";\nimport ShopNavigator from \"./navigation/ShopNavigator\";\nvar rootReducer = combineReducers({\n  products: productsReducer,\n  cart: cartReducer\n});\nvar store = createStore(rootReducer, composeWithDevTools);\n\nvar fetchFonts = function fetchFonts() {\n  return Font.loadAsync({\n    \"open-sans\": require(\"./assets/fonts/OpenSans-Regular.ttf\"),\n    \"open-sans-bold\": require(\"./assets/fonts/OpenSans-Bold.ttf\")\n  });\n};\n\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fontLoaded = _useState2[0],\n      setFontLoaded = _useState2[1];\n\n  if (!fontLoaded) {\n    return React.createElement(AppLoading, {\n      startAsync: fetchFonts,\n      onFinish: function onFinish() {\n        setFontLoaded(true);\n      },\n      onError: function onError() {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return React.createElement(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, React.createElement(ShopNavigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["D:/React-Native/rn-shop/App.js"],"names":["React","useState","createStore","combineReducers","Provider","AppLoading","Font","composeWithDevTools","productsReducer","cartReducer","ShopNavigator","rootReducer","products","cart","store","fetchFonts","loadAsync","require","App","fontLoaded","setFontLoaded"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAOC,eAAP;AACA,OAAOC,WAAP;AACA,OAAOC,aAAP;AAEA,IAAMC,WAAW,GAAGR,eAAe,CAAC;AAClCS,EAAAA,QAAQ,EAAEJ,eADwB;AAElCK,EAAAA,IAAI,EAAEJ;AAF4B,CAAD,CAAnC;AAKA,IAAMK,KAAK,GAAGZ,WAAW,CAACS,WAAD,EAAcJ,mBAAd,CAAzB;;AAEA,IAAMQ,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,SAAOT,IAAI,CAACU,SAAL,CAAe;AACpB,iBAAaC,OAAO,uCADA;AAEpB,sBAAkBA,OAAO;AAFL,GAAf,CAAP;AAID,CALD;;AAOA,eAAe,SAASC,GAAT,GAAe;AAC5B,kBAAoCjB,QAAQ,CAAC,KAAD,CAA5C;AAAA;AAAA,MAAOkB,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,MAAG,CAACD,UAAJ,EAAe;AACb,WAAO,oBAAC,UAAD;AAAY,MAAA,UAAU,EAAEJ,UAAxB;AAAoC,MAAA,QAAQ,EAAE,oBAAM;AAACK,QAAAA,aAAa,CAAC,IAAD,CAAb;AAAqB,OAA1E;AAA4E,MAAA,OAAO,EAAE,mBAAM,CAAE,CAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEN,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD","sourcesContent":["import React, {useState} from \"react\";\r\nimport { createStore, combineReducers } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport AppLoading from \"expo-app-loading\";\r\nimport * as Font from \"expo-font\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport productsReducer from \"./store/reducers/products\";\r\nimport cartReducer from \"./store/reducers/cart\";\r\nimport ShopNavigator from \"./navigation/ShopNavigator\";\r\n\r\nconst rootReducer = combineReducers({\r\n  products: productsReducer,\r\n  cart: cartReducer\r\n});\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools);\r\n\r\nconst fetchFonts = () => {\r\n  return Font.loadAsync({\r\n    \"open-sans\": require(\"./assets/fonts/OpenSans-Regular.ttf\"),\r\n    \"open-sans-bold\": require(\"./assets/fonts/OpenSans-Bold.ttf\")\r\n  });\r\n};\r\n\r\nexport default function App() {\r\n  const [fontLoaded, setFontLoaded] = useState(false);\r\n\r\n  if(!fontLoaded){\r\n    return <AppLoading startAsync={fetchFonts} onFinish={() => {setFontLoaded(true);}} onError={() => {}}/>;\r\n  }\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <ShopNavigator />\r\n    </Provider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}